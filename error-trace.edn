{:clojure.main/message
 "Execution error (OutOfMemoryError) at java.lang.reflect.Method/copy (Method.java:153).\nGC overhead limit exceeded\n",
 :clojure.main/triage
 {:clojure.error/class java.lang.OutOfMemoryError,
  :clojure.error/line 153,
  :clojure.error/cause "GC overhead limit exceeded",
  :clojure.error/symbol java.lang.reflect.Method/copy,
  :clojure.error/source "Method.java",
  :clojure.error/phase :execution},
 :clojure.main/trace
 {:via
  [{:type java.lang.OutOfMemoryError,
    :message "GC overhead limit exceeded",
    :at [java.lang.reflect.Method copy "Method.java" 153]}],
  :trace
  [[java.lang.reflect.Method copy "Method.java" 153]
   [java.lang.reflect.ReflectAccess
    copyMethod
    "ReflectAccess.java"
    140]
   [sun.reflect.ReflectionFactory
    copyMethod
    "ReflectionFactory.java"
    316]
   [java.lang.Class copyMethods "Class.java" 3124]
   [java.lang.Class getMethods "Class.java" 1615]
   [clojure.lang.Reflector getMethods "Reflector.java" 498]
   [clojure.lang.Reflector
    invokeNoArgInstanceMember
    "Reflector.java"
    436]
   [leiningen.core.pedantic$all_paths$iter__7492__7498$fn__7499
    invoke
    "pedantic.clj"
    110]
   [clojure.lang.LazySeq sval "LazySeq.java" 42]
   [clojure.lang.LazySeq seq "LazySeq.java" 58]
   [clojure.lang.ChunkedCons chunkedNext "ChunkedCons.java" 59]
   [clojure.lang.ChunkedCons next "ChunkedCons.java" 43]
   [clojure.lang.RT next "RT.java" 713]
   [clojure.core$next__5386 invokeStatic "core.clj" 64]
   [clojure.core$dorun invokeStatic "core.clj" 3142]
   [clojure.core$doall invokeStatic "core.clj" 3148]
   [clojure.core$doall invoke "core.clj" 3148]
   [leiningen.core.pedantic$all_paths invokeStatic "pedantic.clj" 113]
   [leiningen.core.pedantic$all_paths invoke "pedantic.clj" 100]
   [leiningen.core.pedantic$transform_graph
    invokeStatic
    "pedantic.clj"
    123]
   [leiningen.core.pedantic$transform_graph invoke "pedantic.clj" 115]
   [leiningen.core.pedantic$use_transformer$reify__7526
    transformGraph
    "pedantic.clj"
    161]
   [org.eclipse.aether.internal.impl.collect.DefaultDependencyCollector
    collectDependencies
    "DefaultDependencyCollector.java"
    266]
   [org.eclipse.aether.internal.impl.DefaultRepositorySystem
    resolveDependencies
    "DefaultRepositorySystem.java"
    304]
   [sun.reflect.NativeMethodAccessorImpl
    invoke0
    "NativeMethodAccessorImpl.java"
    -2]
   [sun.reflect.NativeMethodAccessorImpl
    invoke
    "NativeMethodAccessorImpl.java"
    62]
   [sun.reflect.DelegatingMethodAccessorImpl
    invoke
    "DelegatingMethodAccessorImpl.java"
    43]
   [java.lang.reflect.Method invoke "Method.java" 498]
   [clojure.lang.Reflector invokeMatchingMethod "Reflector.java" 167]
   [clojure.lang.Reflector invokeInstanceMethod "Reflector.java" 102]
   [cemerick.pomegranate.aether$resolve_dependencies_STAR_
    invokeStatic
    "aether.clj"
    810]
   [cemerick.pomegranate.aether$resolve_dependencies_STAR_
    doInvoke
    "aether.clj"
    711]],
  :cause "GC overhead limit exceeded"}}

